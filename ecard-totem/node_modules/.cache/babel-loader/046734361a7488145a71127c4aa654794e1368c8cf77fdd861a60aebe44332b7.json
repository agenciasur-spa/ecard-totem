{"ast":null,"code":"var _jsxFileName = \"/Users/mauricioojeda/Projects/agenciasur/bestado/ecard-totem/ecard-totem/src/components/Formulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { rutFormato, rutValidator } from \"./validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Formulario = () => {\n  _s();\n  var _errors$rut, _errors$rut2, _errors$rut3;\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm();\n  const onSubmit = data => {\n    // https://my-json-server.typicode.com/maur-ojeda/Mockend/users\n    // https://github.com/maur-ojeda/Mockend/blob/main/db.json\n    console.log(data);\n    setSuccessMsg(\"User registration is successful.\");\n    fetchQuotes();\n    reset();\n  };\n  const fetchQuotes = async () => {\n    try {\n      const res = await axios.get(`https://andruxnet-random-famous-quotes.p.rapidapi.com/`, {\n        params: {\n          cat: 'movies',\n          count: '10'\n        },\n        headers: {\n          'X-RapidAPI-Key': '4ee9424734msh8c05e0f6fde9c8cp1700f8jsn6b1ddc70a2d7',\n          'X-RapidAPI-Host': 'andruxnet-random-famous-quotes.p.rapidapi.com'\n        }\n      });\n      setResponse(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Formulario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [successMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-msg\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rut\",\n          ...register('rut', {\n            required: true,\n            validate: {\n              rutFormato,\n              rutValidator\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), ((_errors$rut = errors.rut) === null || _errors$rut === void 0 ? void 0 : _errors$rut.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: \"Rut es requerido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), ((_errors$rut2 = errors.rut) === null || _errors$rut2 === void 0 ? void 0 : _errors$rut2.type) === \"rutFormato\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Formato no v\\xE1lido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 56\n        }, this), ((_errors$rut3 = errors.rut) === null || _errors$rut3 === void 0 ? void 0 : _errors$rut3.type) === \"rutValidator\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Rut no v\\xE1lido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this),\n    // If the response is not null, display the quote.\n    response && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: response.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Formulario, \"3DBhKsUIlC7271Sx91OPR1+mIi8=\", false, function () {\n  return [useForm];\n});\n_c = Formulario;\nexport default Formulario;\nvar _c;\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["React","useState","axios","useForm","rutFormato","rutValidator","Formulario","successMsg","setSuccessMsg","response","setResponse","register","formState","errors","handleSubmit","reset","onSubmit","data","console","log","fetchQuotes","res","get","params","cat","count","headers","err","required","validate","rut","type","text"],"sources":["/Users/mauricioojeda/Projects/agenciasur/bestado/ecard-totem/ecard-totem/src/components/Formulario.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { rutFormato, rutValidator } from \"./validators\";\n\nconst Formulario  = () => {\n    const [successMsg, setSuccessMsg] = useState(\"\");\n    const [response, setResponse] = useState(null);\n\n    const {register, formState:{errors}, handleSubmit, reset } = useForm();\n    \n    const onSubmit = (data) => {\n        // https://my-json-server.typicode.com/maur-ojeda/Mockend/users\n        // https://github.com/maur-ojeda/Mockend/blob/main/db.json\n        console.log(data);\n        setSuccessMsg(\"User registration is successful.\");\n        fetchQuotes();\n        reset();\n    };\n\n\n    const fetchQuotes = async () => {\n\t\ttry {\n\t\t\tconst res = await axios.get(`https://andruxnet-random-famous-quotes.p.rapidapi.com/`, {\n                \n            \n            \n            params: {cat: 'movies', count: '10'},\n            \n            headers: {\n                    'X-RapidAPI-Key': '4ee9424734msh8c05e0f6fde9c8cp1700f8jsn6b1ddc70a2d7',\n                    'X-RapidAPI-Host': 'andruxnet-random-famous-quotes.p.rapidapi.com'\n                  }\n\t\t\t\t\n\t\t\t});\n\t\t\tsetResponse(res.data);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n    return <>\n        <h2>Formulario</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        {successMsg && <p className=\"success-msg\">{successMsg}</p>}\n            <div>\n                <label>Rut</label>\n                <input type=\"text\" name=\"rut\" {...register('rut', {required: true,  validate: { rutFormato, rutValidator }})}/>\n                {errors.rut?.type === \"required\" && (\n            <p className=\"errorMsg\">Rut es requerido.</p>\n          )}\n                {errors.rut?.type === \"rutFormato\" && (<p>Formato no válido.</p>)}\n                {errors.rut?.type === \"rutValidator\" && (<p>Rut no válido.</p>)}\n                \n            </div>  \n\n            <div>\n                <input type=\"submit\" value=\"Enviar\"/>\n            </div>\n\n\n        </form>\n\n\n\n        {\n\t\t\t\t// If the response is not null, display the quote.\n\t\t\t\tresponse && <span>{response.text}</span>\n\t\t\t}\n\n    </>\n}\nexport default Formulario;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,UAAU,EAAEC,YAAY,QAAQ,cAAc;AAAC;AAAA;AAExD,MAAMC,UAAU,GAAI,MAAM;EAAA;EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM;IAACU,QAAQ;IAAEC,SAAS,EAAC;MAACC;IAAM,CAAC;IAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGZ,OAAO,EAAE;EAEtE,MAAMa,QAAQ,GAAIC,IAAI,IAAK;IACvB;IACA;IACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBT,aAAa,CAAC,kCAAkC,CAAC;IACjDY,WAAW,EAAE;IACbL,KAAK,EAAE;EACX,CAAC;EAGD,MAAMK,WAAW,GAAG,YAAY;IAClC,IAAI;MACH,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,wDAAuD,EAAE;QAI7EC,MAAM,EAAE;UAACC,GAAG,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAI,CAAC;QAEpCC,OAAO,EAAE;UACD,gBAAgB,EAAE,oDAAoD;UACtE,iBAAiB,EAAE;QACrB;MAEf,CAAC,CAAC;MACFhB,WAAW,CAACW,GAAG,CAACJ,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACbT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IACjB;EACD,CAAC;EAEE,oBAAO;IAAA,wBACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eACnB;MAAM,QAAQ,EAAEb,YAAY,CAACE,QAAQ,CAAE;MAAA,WACtCT,UAAU,iBAAI;QAAG,SAAS,EAAC,aAAa;QAAA,UAAEA;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,eACtD;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAClB;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,KAAK;UAAA,GAAKI,QAAQ,CAAC,KAAK,EAAE;YAACiB,QAAQ,EAAE,IAAI;YAAGC,QAAQ,EAAE;cAAEzB,UAAU;cAAEC;YAAa;UAAC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAG,EAC9G,gBAAAQ,MAAM,CAACiB,GAAG,gDAAV,YAAYC,IAAI,MAAK,UAAU,iBACpC;UAAG,SAAS,EAAC,UAAU;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QACxB,EACM,iBAAAlB,MAAM,CAACiB,GAAG,iDAAV,aAAYC,IAAI,MAAK,YAAY,iBAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0B,EAChE,iBAAAlB,MAAM,CAACiB,GAAG,iDAAV,aAAYC,IAAI,MAAK,cAAc,iBAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB;MAAA;QAAA;QAAA;QAAA;MAAA,QAE7D,eAEN;QAAA,uBACI;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACnC;IAAA;MAAA;MAAA;MAAA;IAAA,QAGH;IAKX;IACAtB,QAAQ,iBAAI;MAAA,UAAOA,QAAQ,CAACuB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA,gBAGrC;AACP,CAAC;AAAA,GAlEK1B,UAAU;EAAA,QAIiDH,OAAO;AAAA;AAAA,KAJlEG,UAAU;AAmEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}