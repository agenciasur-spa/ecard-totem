{"ast":null,"code":"var _jsxFileName = \"/Users/mauricioojeda/Projects/agenciasur/bestado/ecard-totem/ecard-totem/src/components/Formulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { rutFormato, rutValidator } from \"./validators\";\nimport QrCode from \"./components/QrCode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Formulario = () => {\n  _s();\n  var _errors$rut, _errors$rut2, _errors$rut3;\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const [response, setResponse] = useState(\"response\");\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm();\n  const onSubmit = data => {\n    // https://my-json-server.typicode.com/maur-ojeda/Mockend/users\n    // https://github.com/maur-ojeda/Mockend/blob/main/db.json\n\n    setSuccessMsg(\"Consulta correcta\");\n    fetchUsers(data);\n    reset();\n  };\n  const fetchUsers = async rut => {\n    try {\n      const res = await axios.get(`https://my-json-server.typicode.com/maur-ojeda/Mockend/users`, {\n        headers: {\n          //'X-RapidAPI-Key': '4ee9424734msh8c05e0f6fde9c8cp1700f8jsn6b1ddc70a2d7',\n          //'X-RapidAPI-Host': 'andruxnet-random-famous-quotes.p.rapidapi.com'\n        },\n        params: {\n          nationalId: rut.rut\n        }\n      });\n      setResponse(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Formulario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [successMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-msg\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this), response && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: response[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this), response && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: response[0].token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(QrCode, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Rut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"rut\",\n          ...register('rut', {\n            required: true,\n            validate: {\n              rutFormato,\n              rutValidator\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), ((_errors$rut = errors.rut) === null || _errors$rut === void 0 ? void 0 : _errors$rut.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: \"Rut es requerido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), ((_errors$rut2 = errors.rut) === null || _errors$rut2 === void 0 ? void 0 : _errors$rut2.type) === \"rutFormato\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Formato no v\\xE1lido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 56\n        }, this), ((_errors$rut3 = errors.rut) === null || _errors$rut3 === void 0 ? void 0 : _errors$rut3.type) === \"rutValidator\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Rut no v\\xE1lido.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Formulario, \"C6g8petLaF/W2VTKndcE/dz9oRQ=\", false, function () {\n  return [useForm];\n});\n_c = Formulario;\nexport default Formulario;\nvar _c;\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"names":["React","useState","axios","useForm","rutFormato","rutValidator","QrCode","Formulario","successMsg","setSuccessMsg","response","setResponse","register","formState","errors","handleSubmit","reset","onSubmit","data","fetchUsers","rut","res","get","headers","params","nationalId","err","console","log","name","token","required","validate","type"],"sources":["/Users/mauricioojeda/Projects/agenciasur/bestado/ecard-totem/ecard-totem/src/components/Formulario.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { rutFormato, rutValidator } from \"./validators\";\nimport QrCode from \"./components/QrCode\";\n\n\n\n\nconst Formulario  = () => {\n    const [successMsg, setSuccessMsg] = useState(\"\");\n    const [response, setResponse] = useState(\"response\");\n    const {register, formState:{errors}, handleSubmit, reset } = useForm();\n    \n    const onSubmit = (data) => {\n        // https://my-json-server.typicode.com/maur-ojeda/Mockend/users\n        // https://github.com/maur-ojeda/Mockend/blob/main/db.json\n\n        setSuccessMsg(\"Consulta correcta\");\n        fetchUsers(data)\n        reset();\n    };\n\n\n    const fetchUsers = async rut => {\n\t\ttry {\n\t\t\tconst res = await axios.get(\n                `https://my-json-server.typicode.com/maur-ojeda/Mockend/users`,\n                {\n                    headers: {\n                        //'X-RapidAPI-Key': '4ee9424734msh8c05e0f6fde9c8cp1700f8jsn6b1ddc70a2d7',\n                        //'X-RapidAPI-Host': 'andruxnet-random-famous-quotes.p.rapidapi.com'\n                    },\n                    params: {\n                        nationalId: rut.rut\n                    },\n                }\n\n                );\n\t\t\tsetResponse(res.data);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n    return <>\n        <h2>Formulario</h2>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        \n        {successMsg && <p className=\"success-msg\">{successMsg}</p>}\n    \n        {response && <span>{response[0].name}</span> }\n        {response && <span>{response[0].token}</span> }\n\n        <QrCode />\n\n    \n        \n       \n\n\n            <div>\n                <label>Rut</label>\n                <input type=\"text\" name=\"rut\" {...register('rut', {required: true,  validate: { rutFormato, rutValidator }})}/>\n                {errors.rut?.type === \"required\" && (\n            <p className=\"errorMsg\">Rut es requerido.</p>\n          )}\n                {errors.rut?.type === \"rutFormato\" && (<p>Formato no válido.</p>)}\n                {errors.rut?.type === \"rutValidator\" && (<p>Rut no válido.</p>)}\n                \n            </div>  \n\n            <div>\n                <input type=\"submit\" value=\"Enviar\"/>\n            </div>\n\n\n        </form>\n\n       \n    </>\n}\nexport default Formulario;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}